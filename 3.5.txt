More Debugging Tactics

Conditionalizing your Debugging Code
	Use preprocessor directives with std::cerr prints to make debugging statements conditional

Using a Logger
	Log files record events that occur in software and writing that information is called logging
	This avoids a lot of clutter and is quite versailte when it comes to sharing the program's information for diagnosis
	The plog logger is implemented as a set of header files, so it's easy to include anywhere you need it
		#include <plog/Log.h>
		#include <plog/Initializers/RollingFileInitializer.h>
		PLOGD << "function() called";
		plog::init(plog::debug, "Logfile.txt");
		PLOGD << "main() called";
	Conditional compilation directives are not required using this method, as most loggers have a method to reduce/eliminate writing output to the log
	Logging can temporarily be disabled by changing the init statement to the following:
		plog::init(plog::none, "Logfile.txt");
	Steps to use plog: https://www.learncpp.com/cpp-tutorial/more-debugging-tactics/